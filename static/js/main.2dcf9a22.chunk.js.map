{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["itemList","type","youtubeId","title","description","tags","date","moment","youtubeOpts","height","width","playerVars","autoplay","disablekb","rel","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getOpenYoutube","id","setState","showYoutube","handleCloseYoutube","createBaseCard","info","imgStyle","backgroundPosition","backgroundRepeat","backgroundImage","concat","imgUrl","cursor","imgHeight","react_default","a","createElement","Card_default","bsPrefix","className","style","onClick","button","action","Body","Title","format","Text","Button_default","size","variant","label","map","e","i","Badge_default","key","pill","createYoutubeCard","createCard","index","Col_default","md","state","undefined","_this2","Jumbotron_default","target","href","Container_default","Row_default","Modal_default","show","onHide","dialogClassName","centered","YouTube","videoId","opts","Component","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2dcf9a22.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// UI library\n\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\n\nimport Modal from 'react-bootstrap/Modal';\n\nimport YouTube from 'react-youtube';\n\n// non-UI library\n\nimport moment from 'moment';\n\n// CSS\n\nimport './App.css';\n\n// Settings\n\nconst itemList = [\n  {\n    type: 'youtube',\n    youtubeId: 'EhIvYd5yoXo',\n    title: 'Sunday in the park',\n    description: 'Shows App UI and How remote-controling Hexapod work.',\n    tags: ['demo', 'app'],\n    date: moment(\"2019-03-17\"),\n  },\n\n  {\n    type: 'youtube',\n    youtubeId: 'oaAE5fC09KQ',\n    title: 'v2.1 - Leg Assembly',\n    description: 'This video demostrates how \"Leg\" is assembled.',\n    tags: ['assembly'],\n    date: moment(\"2019-03-10\"),\n  },\n\n  {\n    type: 'youtube',\n    youtubeId: 'To2Y6Mhu-CE',\n    title: 'Hexapod v2.1',\n    description: 'New movement mode: \"Shift\", \"Climb\", \"Slow\" are supported.',\n    tags: ['demo','popular'],\n    date: moment(\"2018-12-08\"),\n  },\n\n  {\n    type: 'youtube',\n    youtubeId: 'rrRT6g5XCQ4',\n    title: 'Hexapod v2.0',\n    description: 'Show \"Waltz-like\" movement',\n    tags: ['demo'],\n    date: moment(\"2018-10-13\"),\n  },\n\n  {\n    type: 'youtube',\n    youtubeId: 'mwXX7JwDgVw',\n    title: 'Hexapod v2.0',\n    description: 'Show \"Running\" and \"Climb\" movement',\n    tags: ['demo'],\n    date: moment(\"2018-10-10\"),\n  },\n\n  {\n    type: 'youtube',\n    youtubeId: 'NJ7DdDEcq3U',\n    title: 'Hexapod v2.0',\n    description: 'Show various movement.',\n    tags: ['demo','popular'],\n    date: moment(\"2018-10-06\"),\n  },\n\n]\n\nconst youtubeOpts = {\n  height: '100%',\n  width: '100%',\n  playerVars: { // https://developers.google.com/youtube/player_parameters\n    autoplay: 1,\n    disablekb: 1,\n    rel: 0,\n  }\n};\n\n// Code\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showYoutube: false,\n      youtubeId: undefined,\n    };\n  }\n\n  // ----- UI interaction -----\n\n  getOpenYoutube = (id) => () => {\n    this.setState({\n      youtubeId: id,\n      showYoutube: true,\n    })\n  }\n\n  handleCloseYoutube = () => {\n    this.setState({\n      showYoutube: false,\n    })\n  }\n\n  // ----- UI display -----\n\n  /*\n    info.imgUrl     : string\n    info.title      : string\n    info.description: string\n    info.tags       : array of string\n    info.date       : moment obj\n    info.button     : {label, action}\n  */\n  createBaseCard = (info) => {\n    let imgStyle = {\n      height: '300px',\n      backgroundPosition: 'center center', \n      backgroundRepeat: 'no-repeat',\n      backgroundImage: `url(${info.imgUrl})`,\n      cursor: 'pointer',\n\n    }\n    if (info.imgHeight)\n      imgStyle.height = `${info.imgHeight}px`\n\n    return (\n      <Card bsPrefix=\"card mb-4\">\n        <div className='bg-dark' style={imgStyle} onClick={info.button.action}/>\n        <Card.Body>\n          <div className=\"d-flex justify-content-between\">\n            <Card.Title>{info.title}</Card.Title>\n            <small className=\"text-muted\">{info.date.format(\"YYYY-MM-DD\")}</small>\n          </div>\n          <Card.Text>{info.description}</Card.Text>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <Button size=\"sm\" variant=\"outline-primary\" onClick={info.button.action}>{info.button.label}</Button>\n            <div>\n              {\n                info.tags.map((e, i) => <Badge key={i} pill variant=\"secondary\">{e}</Badge>)\n              }\n              <Badge pill variant=\"info\">{info.date.format(\"YYYY-MM\")}</Badge>\n            </div>\n          </div>\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  createYoutubeCard = (info) => {\n    info.imgUrl = `http://img.youtube.com/vi/${info.youtubeId}/0.jpg`;\n    info.imgHeight = 270;\n    info.button = { label: 'Youtube', action: this.getOpenYoutube(info.youtubeId)};\n    return this.createBaseCard(info);\n  }\n\n  createCard = (info, index) => {\n    if (info.type === 'youtube')\n      return (\n        <Col md={6} key={index}>\n          {this.createYoutubeCard(info)}\n        </Col>\n      )\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Jumbotron>\n          <div>\n            <h1 className=\"jumbotron-heading text-outlined\">Hexapod Project</h1>\n            <ul>\n              <li className=\"jumbotron-text text-outlined\">6 legs, each with 3 servos, total 18 degress of freedom</li>\n              <li className=\"jumbotron-text text-outlined\">Android / iOS remotely controlled</li>\n              <li className=\"jumbotron-text text-outlined\">2S LiPO battery powered</li>\n            </ul>\n            <p>\n              <Button variant=\"primary\" target=\"_blank\" href=\"https://github.com/SmallpTsai/hexapod-v2-7697\">Github</Button>\n              <Button variant=\"primary\" target=\"_blank\" href=\"https://www.youtube.com/channel/UC4nvIRRByxOkgKwkdb99Z8w\">Youtube</Button>\n            </p>\n          </div>\n        </Jumbotron>\n\n        <div className=\"py-5 bg-light\">\n          <Container>\n            <Row>\n              {\n                itemList.map((info, index) => this.createCard(info, index))\n              }\n            </Row>\n          </Container>\n        </div>\n\n        <footer className=\"text-muted\">\n          <Container>\n            <small><p>This is a personal hobby project. <br/>All source code (including 3D components, circuit diagrams, source code) are opened under GPL license. <br/>Feel free to make one by yourself. <br/>Happy Making!</p></small>\n          </Container>\n          <Container>\n            <p className=\"float-right\">\n              <a href=\"#\">Back to top</a>\n            </p>\n            <small><p>Powered by &copy; Bootstrap</p></small>\n          </Container>\n        </footer>\n\n\n\n        <Modal \n          show={this.state.showYoutube} \n          onHide={this.handleCloseYoutube}\n          dialogClassName=\"youtube-dialog\"\n          centered\n        >\n          <div className=\"youtube-wrapper\">\n            <YouTube\n              className=\"youtube-iframe\"\n              videoId={this.state.youtubeId}\n              opts={youtubeOpts}\n            />\n          </div>\n        </Modal>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}